#
# example Dockerfile for https://docs.docker.com/engine/examples/postgresql_service/
#

FROM ubuntu:20.04

RUN apt-get update && apt-get install -y gnupg wget

# Add the PostgreSQL PGP key to verify their Debian packages.
# It should be the same key as https://www.postgresql.org/media/keys/ACCC4CF8.asc
RUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -

# Add PostgreSQL's repository. It contains the most recent stable release
#  of PostgreSQL.
RUN echo "deb http://apt.postgresql.org/pub/repos/apt focal-pgdg main" > /etc/apt/sources.list.d/pgdg.list

# Install ``python-software-properties``, ``software-properties-common`` and PostgreSQL 9.3
#  There are some warnings (in red) that show up during the build. You can hide
#  them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y python3-software-properties software-properties-common postgresql-10 </dev/null

# Note: The official Debian and Ubuntu images automatically ``apt-get clean``
# after each ``apt-get``

# Run the rest of the commands as the ``postgres`` user created by the ``postgres-9.3`` package when it was ``apt-get installed``
USER postgres

# Create a PostgreSQL role named ``docker`` with ``docker`` as the password and
# then create a database `docker` owned by the ``docker`` role.
# Note: here we use ``&&\`` to run commands one after the other - the ``\``
#       allows the RUN command to span multiple lines.
RUN \
      /etc/init.d/postgresql start && \
      psql --command "CREATE USER docker WITH SUPERUSER PASSWORD 'docker';" && \
      createdb -O docker ocn && \
      /usr/lib/postgresql/10/bin/pg_ctl stop -m smart --wait -t 60 -D /var/lib/postgresql/10/main && \
      sync

ENV   PGPASSWORD=docker

# Adjust PostgreSQL configuration so that remote connections to the
# database are possible.
RUN echo "host all  all    0.0.0.0/0  md5" >> /etc/postgresql/10/main/pg_hba.conf

# And add ``listen_addresses`` to ``/etc/postgresql/10/main/postgresql.conf``
RUN echo "listen_addresses = '*'" >> /etc/postgresql/10/main/postgresql.conf
RUN echo "max_connections = 200" >> /etc/postgresql/10/main/postgresql.conf
RUN echo "shared_buffers = 512MB" >> /etc/postgresql/10/main/postgresql.conf

# Expose the PostgreSQL port
EXPOSE 5432

# FORCE REBUILD
#include_rebuild_hash

# Initialize database
COPY  ./sql-data.d/ /docker-entrypoint-initdb.d
RUN \
      /etc/init.d/postgresql start && \
      find /docker-entrypoint-initdb.d -iname "*.sql" -type f -print0 \
        | sort -z \
        | xargs -0 -n1 psql -h localhost -d ocn -U docker -w -f && \
      /usr/lib/postgresql/10/bin/pg_ctl stop -m smart --wait -t 60 -D /var/lib/postgresql/10/main && \
      sync


# Add VOLUMEs to allow backup of config, logs and databases
VOLUME  ["/etc/postgresql", "/var/log/postgresql", "/var/lib/postgresql"]

# Set the default command to run when starting the container
CMD ["/usr/lib/postgresql/10/bin/postgres", "-D", "/var/lib/postgresql/10/main", "-c", "config_file=/etc/postgresql/10/main/postgresql.conf"]
