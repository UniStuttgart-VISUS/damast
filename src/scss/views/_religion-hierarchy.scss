@use '../colors' as *;
@use '../vis-variables' as *;
@use '../vis-filters' as filters;


.religion-container {
  grid-template-rows: max-content auto auto;

  .hierarchy {
    --hierarchy-depth: 2;
    --num-columns: 3;
    --num-rows: 26;

    min-height: 200px;

    display: grid;
    gap: 0.3ex;

    grid-template-rows: repeat(var(--num-rows), 1fr);
    grid-template-columns:
      // first column: only label
      max-content
      // indented tree levels
      repeat(var(--hierarchy-depth), 1fr)
      // two columns per checkbox column, one for subtree toggling
      repeat(calc(2 * var(--num-columns)), max-content)
      ;

    & > .religion-label {
      justify-self: end;
    }

    & > svg {
      justify-self: stretch;
    }
  }
}


.hierarchy-node {
  &__background {
    opacity: 0;
  }

  &__area {
    &--active {

    }

    &--no-data {
      fill: $clr-gray;
    }

    &--inactive {
      @include filters.muted();
    }
  }

  &:hover #{&}__area--inactive {
    filter: unset;
  }

  .indented-tree--brushed > &:not(#{&}--brushed) {
    @include filters.darker();
  }

  text {
    font-weight: 600;
    fill: white;
    mix-blend-mode: exclusion;
  }

  &#{&}-unselected text {
    text-decoration: line-through;
    fill: #ddd;
  }
}

.checkbox {
  stroke: $clr-accent;
  stroke-width: 2;
  fill-opacity: 0;

  &__cross {
    stroke: $clr-accent;
    stroke-width: 2;
    fill: none;
  }

  &--disabled,
  &--disabled #{&}__cross {
    stroke: $clr-lightgray;
  }

  &-column {
    --clr-yellow: #{$clr-yellow};

    &__add-button {
      --clr-error: #{$clr-green};
    }

    &__remove-button {
      --clr-error: #{$clr-red};
    }

    .checkbox-block > g:only-of-type &__remove-button {
      --clr-error: #{$clr-gray};
    }

    .hierarchy--simple-mode &__add-button {
      display: none;
    }
  }
}

