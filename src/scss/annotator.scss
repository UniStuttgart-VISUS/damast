@use 'colors' as *;
@use 'prototype-variables' as *;
@use 'mixins';
@use 'annotator-virtual-text' as virtual;

@forward 'annotator-editor';
@forward 'annotator-popups';
@forward 'modals';


$swimline-width: 200px;
$text-margins: 20px;
$minimap-width: 16px;


body {
  height: calc(100vh - 1rem);
  display: grid;
  grid-template-rows: max-content auto max-content;
}

.content {
  padding: 1rem;
  display: grid;
  grid-template-columns: clamp(
      calc(45ch + #{$swimline-width} + 2 * #{$text-margins} + #{$minimap-width}),
      60%,
      calc(80ch + #{$swimline-width} + 2 * #{$text-margins} + #{$minimap-width})
    ) auto;
  gap: 2rem;

  // shown instead of editor interface
  &.invalid-document-error-message {
    @include mixins.baseFlexBlock();
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    color: $clr-red;

    p {
      max-width: 45ch;
    }

    h1 {
      font-size: 1.6rem;
      color: $clr-red;
    }
  }
}

.annotation-area,
.sidebar {
  @include mixins.baseFlexBlock();
  margin: 0;
}

.sidebar {
  overflow-y: auto;
}

.annotation-area {
  grid-column: 1 / span 1;
  overflow: hidden;
  display: grid;
  grid-template-rows: max-content 1fr;
  height: 100%;
  max-height: 100%;

  &__header {
    position: sticky;
    top: 0;
    background: $clr-gray;
    padding: 0.5ex;
    display: grid;
    grid-template-columns: auto max-content;

    .document-info {
      font-size: small;
      align-self: center;
    }
  }

  .scroll {
    overflow-y: auto;
    scrollbar-width: none;
    scroll-behavior: smooth;

    &::-webkit-scrollbar {
      width: 0;
    }
  }

  .scroll-parent {
    position: relative;
  }

  .document {
    padding-block: $text-margins;
    padding-left: calc(#{$swimline-width} + #{$text-margins});
    padding-right: calc(#{$minimap-width} + #{$text-margins});

    color: $clr-fg;
    line-height: 2.5;

    h1 {
      font-size: 1.6rem;
      color: $clr-title;
    }

    // show virtual text
    @include virtual.virtual-annotator-text();
  }

  .links {
    pointer-events: none;

    position: absolute;
    top: 0;
    left: 0;
  }

  .minimap {
    position: fixed;
    width: $minimap-width;
    cursor: pointer;
  }
}

.annotation {
  --annotation-bg-color: none;

  scroll-margin-block: 1em;

  &::after {
    content: '';
    font-size: xx-small;
  }

  @each $k, $v in (
    "unknown": $clr-dark-red,
    "person": $clr-annotation-person,
    "place": $clr-annotation-place,
    "religion": $clr-annotation-religion,
    "timegroup": $clr-annotation-timegroup,
    "overlap": $clr-gray,
  ) {
    &#{&}--#{$k} {
      --annotation-bg-color: #{$v};

      &::after {
        content: '#{$k}';
      }
    }
  }

  &.annotation-suggestion {
    text-decoration: underline;
    text-decoration-color: $clr-yellow;
    text-decoration-style: wavy;
  }
}

.annotation-link {
  pointer-events: painted;
  cursor: pointer;

  & path {
    fill: none;
    stroke: red;
    stroke-width: 2;
    stroke-linejoin: round;
    stroke-linecap: round;
  }

  &:hover path {
    stroke-width: 5;
  }

  &--creation path {
    stroke: steelblue;
    stroke-dasharray: 1 3;
    animation: blinkstroke 1s linear infinite;

    @keyframes blinkstroke {
      0% {
        stroke-dashoffset: 0;
      }
      100% {
        stroke-dashoffset: 4;
      }
    }
  }

  & circle {
    fill: red;
    stroke: none;
  }

  &--creation circle {
    fill: steelblue;
  }
}

.annotation--creation {
  outline: 2px solid;
  animation: blinking 0.75s ease-in-out infinite alternate;

  @keyframes blinking {
    0% {
      outline-color: steelblue;
    }
    100% {
      outline-color: lightblue;
    }
  }
}

// flashes: fixed
.messages {
  position: fixed;
  top: 10px;
  left: 50%;
  transform: translateX(-50%);
}



body.scrolling {
  &,
  & .minimap {
    cursor: grabbing;
  }

  .document {
    pointer-events: none;
    user-select: none;
  }
}
